apiVersion: v1
kind: Template
metadata:
  name: launchpad-builder
  annotations:
    description: This template creates a Build Configuration using an S2I builder.
    tags: instant-app
parameters:
  - name: SUFFIX_NAME
    description: The suffix name for the template objects
    displayName: Suffix name
  - name: RELEASE_VERSION
    description: The release version number of application
    displayName: Release version
  - name: SOURCE_REPOSITORY_URL
    description: The source URL for the application
    displayName: Source URL
    required: true
  - name: SOURCE_REPOSITORY_REF
    description: The branch name for the application
    displayName: Source Branch
    value: master
    required: true
objects:
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      name: penfold-bot${SUFFIX_NAME}
      labels:
        version: ${RELEASE_VERSION}
    spec: {}
  - apiVersion: v1
    kind: BuildConfig
    metadata:
      name: penfold-bot${SUFFIX_NAME}
      labels:
          version: ${RELEASE_VERSION}
    spec:
      postCommit: {}
      resources: {}
      source:
        git:
          uri: '${SOURCE_REPOSITORY_URL}'
          ref: '${SOURCE_REPOSITORY_REF}'
        type: Git
      strategy:
        type: Source
        sourceStrategy:
          from:
            kind: DockerImage
            name: 'bucharestgold/centos7-s2i-nodejs:10.x'
          incremental: true
      output:
        to:
          kind: ImageStreamTag
          name: 'penfold-bot${SUFFIX_NAME}:${RELEASE_VERSION}'
      triggers: []
    status:
      lastVersion: 0
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: penfold-bot${SUFFIX_NAME}
      labels:
        app: nodejs-health-check
        provider: nodeshift
        project: nodejs-health-check
        version: ${RELEASE_VERSION}
    spec:
      template:
        spec:
          containers:
            - readinessProbe:
                failureThreshold: 3
                initialDelaySeconds: 3
                periodSeconds: 10
                successThreshold: 1
                tcpSocket:
                  port: 8080
                timeoutSeconds:
              livenessProbe:
                failureThreshold: 3
                initialDelaySeconds: 30
                periodSeconds: 10
                successThreshold: 1
                tcpSocket:
                  port: 8080
                timeoutSeconds: 1
              env:
              - name: DATABASE_SERVICE_NAME
                value: mongodb
              - name: MONGODB_USER
                valueFrom:
                  secretKeyRef:
                    key: database-user
                    name: penfold-bot
              - name: MONGODB_PASSWORD
                valueFrom:
                  secretKeyRef:
                    key: database-password
                    name: penfold-bot
              - name: MONGODB_DATABASE
                value: penfolddb
              - name: MONGODB_ADMIN_PASSWORD
                valueFrom:
                  secretKeyRef:
                    key: database-admin-password
                    name: penfold-bot
              - name: MATTERMOST_HOST
                value: chat.openshift.io
              - name: MATTERMOST_GROUP
                value: developers
              - name: MATTERMOST_USER
                value: penfold
              - name: MATTERMOST_PASSWORD
                valueFrom:
                  secretKeyRef:
                    key: mattermost-password
                    name: penfold-bot
              - name: EXPRESS_PORT
                value: "8080"
              - name: HUBOT_LOG_LEVEL
                value: debug
              - name: MONGODB_HOST
                value: mongodb
              image: 172.30.208.107:5000/penfold/penfold-bot:latest
              imagePullPolicy: IfNotPresent
              name: penfold-bot
              securityContext:
                privileged: false
              resources:
                limits:
                  memory: 256Mi
              ports:
                - containerPort: 8080
                  name: http
                  protocol: TCP
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
        metadata:
          labels:
            app: nodejs-health-check
            project: nodejs-health-check
            provider: nodeshift
            version: ${RELEASE_VERSION}
      replicas: 1
      revisionHistoryLimit: 2
      selector:
        app: nodejs-health-check
        project: nodejs-health-check
        provider: nodeshift
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - penfold-bot
            from:
              kind: ImageStreamTag
              name: "penfold-bot${SUFFIX_NAME}:${RELEASE_VERSION}"
